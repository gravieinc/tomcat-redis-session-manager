group = 'com.orangefunction'
version = '2.0.4-tomcat8-gravie'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'idea'

// beta hack: we must set up the AWS credentials before applying the maven-publish plugin to avoid this error:
// Cannot configure the 'publishing' extension after it has been accessed. https://discuss.gradle.org/t/apply-maven-publish-plugin-from-init-script/2460
file("${System.getProperty("user.home")}/.aws/credentials").withReader { reader ->
    ext.awsCredentials = new Properties()
    ext.awsCredentials.load(reader)
    properties.putAll(ext.awsCredentials)
}

apply plugin: 'maven-publish'

compileJava {
  sourceCompatibility = 1.7
  targetCompatibility = 1.7
}

idea.module.iml {
    beforeMerged { module ->
        module.dependencies.clear()
    }
    whenMerged { module ->
        module.dependencies*.exported = true
    }
}

idea.project.ipr {
    beforeMerged { project ->
        project.modulePaths.clear()
    }
    withXml { provider ->
        provider.node.component
                .find { it.@name == 'VcsDirectoryMappings' }
                .mapping.@vcs = 'Git'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
  compile 'com.amazonaws:aws-java-sdk:1.10.27'
  compile 'com.amazonaws:aws-java-sdk-kms:1.10.27'
  compile group: 'org.apache.tomcat', name: 'tomcat-catalina', version: '8.0.15'
  compile group: 'redis.clients', name: 'jedis', version: '2.5.2'
  compile group: 'org.apache.commons', name: 'commons-pool2', version: '2.2'
  //compile group: 'commons-codec', name: 'commons-codec', version: '1.9'

  testCompile group: 'junit', name: 'junit', version: '4.+'
  testCompile 'org.hamcrest:hamcrest-core:1.3'
  testCompile 'org.hamcrest:hamcrest-library:1.3'
  testCompile 'org.mockito:mockito-all:1.9.5'
  testCompile group: 'org.apache.tomcat', name: 'tomcat-coyote', version: '7.0.27'
}

publishing {
    repositories {
        maven {
            url "s3://gravie-maven-repo"
            credentials(AwsCredentials) {
                accessKey awsCredentials.aws_access_key_id
                secretKey awsCredentials.aws_secret_access_key
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

artifacts {
  archives jar

  archives javadocJar
  archives sourcesJar
}

signing {
  sign configurations.archives
}
